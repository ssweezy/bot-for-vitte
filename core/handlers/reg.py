from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


# —Å–ø–∏—Å–∫–∏ —Å–æ—Ç—Ä –∏ —Ä—É–∫–æ–≤–æ–¥
supervisor = []
empolyee = []

async def func_reg(message: Message):
    await message.answer('–≤—ã —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫?', reply_markup=reg_button(1))

# –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞
def reg_button(_):
    kb = InlineKeyboardBuilder()
    kb.button(text="—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å", callback_data="—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å")
    kb.button(text="—Å–æ—Ç—Ä—É–¥–Ω–∏–∫", callback_data="—Å–æ—Ç—Ä—É–¥–Ω–∏–∫")

    kb.adjust(1)
    return kb.as_markup()

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
async def reg_check(call: CallbackQuery):

    if call.data == "—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å":
        if call.from_user.username in supervisor:
            await call.answer("–≤—ã —É–∂–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å")
        elif call.from_user.username not in supervisor:
            supervisor.append(call.from_user.username)
            await call.message.edit_text("üéâ–≤—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
            await call.message.answer(
                'ü§î—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–ª–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –Ω–∞–ø–∏—à–∏—Ç–µ <b>—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</b> –∏–ª–∏ <b>—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏</b>')

    elif call.data == "—Å–æ—Ç—Ä—É–¥–Ω–∏–∫":
        if call.from_user.username in empolyee:
            await call.answer("–≤—ã —É–∂–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫")
        elif call.from_user.username not in empolyee:
            empolyee.append(call.from_user.username)
            await call.message.edit_text("üéâ–≤—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
            await call.message.answer(
                'ü§î—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–ª–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –Ω–∞–ø–∏—à–∏—Ç–µ <b>—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</b> –∏–ª–∏ <b>—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏</b>')



# —Å–ø–∏—Å–æ–∫ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π
async def func_sup(message: Message):
    sup_sum = len(supervisor)
    if sup_sum == 0:
        await message.answer("–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –Ω–∏–∫–∞—Ö —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π(")
    elif sup_sum != 0:
        for i in range(sup_sum):
            await message.answer(f"@{supervisor[i]}")

# —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
async def func_empl(message: Message):
    empl_sum = len(empolyee)
    if empl_sum == 0:
        await message.answer("–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –Ω–∏–∫–∞—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤(")
    elif empl_sum != 0:
        for i in range(empl_sum):
            await message.answer(f"@{empolyee[i]}")









